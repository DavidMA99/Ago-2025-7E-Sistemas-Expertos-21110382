7E_21110382_Inv2 
Monroy Alvarez Carlos David	21110382	Tarea 2		Sistemas Expertos

1. Adquisición de conocimiento

¿Qué es?
Es el proceso mediante el cual el sistema experto obtiene información de distintas fuentes: expertos humanos, sensores o bases de datos.

¿Para qué sirve?
Para capturar la experiencia y conocimientos necesarios que el sistema utilizará para resolver problemas.

¿Cómo funciona? (ejemplo en Python)
Un sistema puede “aprender” nuevas respuestas cuando no encuentra una en su base de conocimiento.


2. Representación del conocimiento

¿Qué es?
Es la forma en que el conocimiento se organiza dentro del sistema (reglas, hechos, heurísticas).

¿Para qué sirve?
Para estructurar el conocimiento general y los hechos particulares, permitiendo que el sistema pueda razonar.

¿Cómo funciona? (ejemplo en Python)
Se pueden usar reglas condicionales y hechos guardados en estructuras de datos.


3. Tratamiento del conocimiento

¿Qué es?
Es el proceso de razonamiento, donde el motor de inferencia aplica reglas a los hechos y genera conclusiones.

¿Para qué sirve?
Para resolver problemas y justificar conclusiones.

¿Cómo funciona? (ejemplo en Python)


4. Utilización del conocimiento

¿Qué es?
Es la interacción del sistema experto con el usuario final mediante una interfaz.

¿Para qué sirve?
Para que el usuario consulte y reciba respuestas del sistema experto.

¿Cómo funciona? (ejemplo en Python)

# Proyecto: Registro_Adquirir_Conocimiento
# Materia: Sistemas Expertos 
# Descripción:
# Módulo de adquisición del conocimiento con un chat sencillo.
# El sistema responde con frases precargadas y permite
# registrar nuevo conocimiento si no encuentra coincidencia.

import json
import os

ARCHIVO_CONOCIMIENTO = "base_conocimiento.json"

# --- Funciones para persistencia ---
def cargar_conocimiento():
    """Carga la base de conocimiento desde un archivo JSON, o crea la inicial si no existe."""
    if os.path.exists(ARCHIVO_CONOCIMIENTO):
        with open(ARCHIVO_CONOCIMIENTO, "r", encoding="utf-8") as f:
            return json.load(f)
    else:
        # Base inicial si no existe el archivo
        return {
            "hola": "¡Hola! ¿Cómo estás?",
            "como estas": "Estoy bien, gracias por preguntar. ¿Y tú?",
            "de que te gustaria hablar": "Podemos hablar de tecnología, sistemas expertos o lo que quieras."
        }

def guardar_conocimiento():
    """Guarda la base de conocimiento en un archivo JSON."""
    with open(ARCHIVO_CONOCIMIENTO, "w", encoding="utf-8") as f:
        json.dump(base_conocimiento, f, ensure_ascii=False, indent=4)

# --- Base de conocimiento (se carga desde archivo o inicial) ---
# (2) REPRESENTACIÓN DEL CONOCIMIENTO: La base de conocimiento se representa como un diccionario en Python.
base_conocimiento = cargar_conocimiento()

def normalizar_texto(texto):
    """
    Normaliza el texto quitando mayúsculas y espacios extra
    para que las búsquedas sean más consistentes.
    """
    return texto.strip().lower()

def adquirir_conocimiento(pregunta):
    """
    Permite al usuario registrar una nueva respuesta
    cuando no existe en la base de conocimiento.
    """
    # (1) ADQUISICIÓN DE CONOCIMIENTO: El sistema solicita al usuario que ingrese nueva información.
    print(f"No sé cómo responder a: '{pregunta}' 🤔")
    nueva_respuesta = input("Por favor, ingresa la respuesta que debo aprender: ")
    base_conocimiento[normalizar_texto(pregunta)] = nueva_respuesta
    guardar_conocimiento()  # Guardamos inmediatamente
    print("¡Gracias! He aprendido algo nuevo. ✅")

def chat():
    """
    Inicia el chat interactivo con el usuario.
    """
    print("=== Bienvenido al Chat de Adquisición de Conocimiento ===")
    print("Escribe 'salir' para terminar la conversación.\n")

    while True:
        entrada = input("Tú: ")
        entrada_norm = normalizar_texto(entrada)

        if entrada_norm == "salir":
            print("Chat finalizado. ¡Hasta luego!")
            break

        # (3) TRATAMIENTO DEL CONOCIMIENTO: El sistema procesa la entrada del usuario,
        # compara con la base de conocimiento y decide cómo responder.
        if entrada_norm in base_conocimiento:
            # (4) UTILIZACIÓN DEL CONOCIMIENTO: El sistema aplica el conocimiento almacenado y responde.
            print("Bot:", base_conocimiento[entrada_norm])
        else:
            adquirir_conocimiento(entrada)

# Punto de entrada
if __name__ == "__main__":
    chat()

5. Repositorio en GitHub
https://github.com/DavidMA99/Ago-2025-7E-Sistemas-Expertos-21110382/edit/main/7E_21110382_Inv2
